<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
<!--  <meta charset="utf-8"> -->
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>PST Script Triggers</title>
  <meta name="description" content="The IESDP (Infinity Engine Structures Description Project) is an effort to research the workings of the Bioware Infinity Engine(R), and act as a collective resource for those interested in such workings.
">

  





  <link rel="stylesheet" href="../../css/main.css">

<!--
  <link rel="canonical" href="https://gibberlings3.github.io/iesdp/scripting/triggers/psttriggers.htm">
  <link rel="alternate" type="application/rss+xml" title="IESDP" href="https://gibberlings3.github.io/iesdp/feed.xml">
-->
</head>


<body>

<header class="site-header">








    <hr />
    <div id="buttonboxtop">
      <div id="buttonstriptop">
        <a href="../../index.htm">Index</a> &nbsp;&bull;&nbsp;
        <a href="../../files/2da/index.htm">2DA</a> &nbsp;&bull;&nbsp;
        <a href="../../opcodes/index.htm">Effects</a> &nbsp;&bull;&nbsp;
        <a href="../../file_formats/index.htm">File Formats</a> &nbsp;&bull;&nbsp;
        <a href="../../scripting/actions/index.htm">Actions</a> &nbsp;&bull;&nbsp;
        <a href="../../files/ids/index.htm">Identifiers</a> &nbsp;&bull;&nbsp;
        <a href="../../scripting/triggers/index.htm">Triggers</a> &nbsp;&bull;&nbsp;
        <a href="../../appendices/index.htm">Appendices</a> &nbsp;&bull;&nbsp;
        <a href="../../site_info/index.htm">Site Info</a> &nbsp;&bull;&nbsp;
        <a href="../../site_info/legal.htm">Legal</a> &nbsp;&bull;&nbsp;
        <a href="https://www.gibberlings3.net/forums/forum/54-iesdp-updates-and-info/" target="_blank">Forum</a>
      </div>
    </div>
    <hr />
    <div id="logo">
      <a href="../../main.htm">
        <img src="../../images/iesdp_logo.gif" alt="IESDP Logo" width="120" height="120" />
      </a>
    </div>

</header>


<div id="nonFooter">
  <div id="content">

    <div class="title_main"> PST Script Triggers </div>
    <br />
    <strong>0x0001 Acquired(S:ResRef*)</strong><br />
    NT Returns true only if the current CRE obtained the specified item in the last script round.<br />
    Trigger appears to be broken?<br />
    <br />
    <strong>0x0002 AttackedBy(O:Object*,I:Style*AStyles)</strong><br />
    Returns true only if the active CRE was attacked in the style specified (not necessarily hit) or had an offensive spell cast on it by the specified object in the last script round. The style parameter is non functional - this trigger is triggered by any attack style.<br />
    Note that the LastAttacker object is only set for physical attacks (i.e. spell and script damage does not set LastAttacker).<br />
    <br />
    <strong>0x0003 Help(O:Object*)</strong><br />
    Returns true if the specified object shouted for help (using the Help() action?) in the last script round.<br />
    <br />
    <strong>0x0004 Joins(O:Object*)</strong><br />
    Returns true if the specified object has joined the party in the last script round. This trigger is only sent to player characters.<br />
    <br />
    <strong>0x0005 Leaves(O:Object*)</strong><br />
    Returns true if the specified object has left the party in the last script round. This trigger is only sent to player characters.<br />
    <br />
    <strong>0x0006 ReceivedOrder(O:Object*,I:Order ID*)</strong><br />
    NT This trigger is used in conjunction with the GiveOrder() action, and works in a similar way to the Heard() trigger. Only one creature at a time responds to an Order, and creatures do not detect their own orders. The creature must be in visual range for this trigger to work.<br />
    <br />
    <strong>0x0007 Said(O:Object*,I:Dialog ID*)</strong><br />
    NT<br />
    <br />
    <strong>0x0008 TurnedBy(O:Object*)</strong><br />
    NT Returns true only if the active CRE was turned by the specified priest or
    paladin.<br />
    <br />
    <strong>0x0009 Unusable(S:ResRef*)</strong><br />
    NT Returns true only if the specified item is unusable by the active CRE.<br />
    <br />
    <strong>0x400A Alignment(O:Object*,I:Alignment*Align)</strong><br />
    Returns true only if the alignment of the specified object matches that in the second parameter.<br />
    <br />
    <strong>0x400B Allegiance(O:Object*,I:Allegience*EA)</strong><br />
    Returns true only if the Enemy/Ally status of the specified object matches that in the second parameter.<br />
    <br />
    <strong>0x400C Class(O:Object*,I:Class*Class)</strong><br />
    Returns true only if the Class of the specified object matches that in the second parameter.<br />
    <br />
    <strong>0x400D Exists(O:Object*)</strong><br />
    NT Returns true only if the specified object exists.<br />
    <br />
    <strong>0x400E General(O:Object*,I:General*General)</strong><br />
    Returns true only if the General category of the specified object matches that in the second parameter.<br />
    <br />
    <strong>0x400F Global(S:Name*,S:Area*,I:Value*)</strong><br />
    Returns true only if the variable with name 1st parameter of type 2nd parameter has value 3rd parameter.<br />
    <br />
    <strong>0x4010 HP(O:Object*,I:Hit Points*)</strong><br />
    Returns true only if the current hitpoints of the specified object are equal to the 2nd parameter.<br />
    <br />
    <strong>0x4011 HPGT(O:Object*,I:Hit Points*)</strong><br />
    Returns true only if the current hitpoints of the specified object are greater than the 2nd parameter.<br />
    <br />
    <strong>0x4012 HPLT(O:Object*,I:Hit Points*)</strong><br />
    Returns true only if the current hitpoints of the specified object are less than the 2nd parameter.<br />
    <br />
    <strong>0x4013 LOS(O:Object*,I:Range*)</strong><br />
    Returns true only if the object specified is in the line of sight of the active CRE and within the given range. This seems to be a combination of the Range and See triggers (see below).<br />
    <br />
    <strong>0x4014 Morale(O:Object*,I:Morale*)</strong><br />
    Returns true only if the morale of the specified object is equal to the second parameter.<br />
    <br />
    <strong>0x4015 MoraleGT(O:Object*,I:Morale*)</strong><br />
    Returns true only if the morale of the specified object is greater than the second parameter.<br />
    <br />
    <strong>0x4016 MoraleLT(O:Object*,I:Morale*)</strong><br />
    Returns true only if the morale of the specified object is less than the second parameter.<br />
    <br />
    <strong>0x4017 Race(O:Object*,I:Race*Race)</strong><br />
    Returns true only if the Race of the specified object is the same as that specified by the 2nd parameter.<br />
    <br />
    <strong>0x4018 Range(O:Object*,I:Range*)</strong><br />
    Returns true only if the specified object is within distance given (in feet) of the active CRE.<br />
    <br />
    <strong>0x4019 Reputation(O:Object*,I:Reputation*)</strong><br />
    Returns true only if the reputation of the specified object is equal to the second parameter.<br />
    <br />
    <strong>0x401A ReputationGT(O:Object*,I:Reputation*)</strong><br />
    Returns true only if the reputation of the specified object is greater than the second parameter.<br />
    <br />
    <strong>0x401B ReputationLT(O:Object*,I:Reputation*)</strong><br />
    Returns true only if the reputation of the specified object is greater than the second parameter.<br />
    <br />
    <strong>0x401C See(O:Object*)</strong><br />
    Returns true only if the active CRE can see the specified object which must not be hidden or invisible.<br />
    <br />
    <strong>0x401D Specifics(O:Object*,I:Specifics*Specific)</strong><br />
    Returns true only if the specifics (as set in the CRE file or by the ChangeSpecifics action) of the specified object is equal to the 2nd parameter.<br />
    <br />
    <strong>0x401E Time(I:Time*Time)</strong><br />
    Returns true only if the period of day matches the period in the 2nd parameter (taken from Time.ids). Hours are offset by 30 minutes, e.g. Time(1) is true between 00:30 and 01:29.<br />
    <br />
    <strong>0x401F TimeOfDay(I:Time Of Day*TimeODay)</strong><br />
    As above but less specific and uses TimeODay.ids at the following times: <code>MORNING</code>: at 6 hours, <code>DAY</code>: from 7 to 20 hours, <code>DUSK</code>: at 21 hours, <code>NIGHT</code>: from 22 hours to 5 hours.<br />
    <br />
    <strong>0x0020 HitBy(O:Object*,I:DameType*Damages)</strong><br />
    Returns true only if the active CRE was hit by the specifed object by the specified damage type in the last script round. If the damage type is CRUSHING
    or 0 then this will return true for ANY damage type.<br />
    !HitBy returns true when the script is first activated (e.g. initial area load) and when hit by any damage type.  <br />
    <br />
    <strong>0x0021 HotKey(I:Key*HotKey)</strong><br />
    Returns true only if the specified key was pressed in the last script round. Hotkeys defined in keymap.ini take precedence over hotkeys expected by this trigger.<br />
    <br />
    <strong>0x0022 TimerExpired(I:ID*)</strong><br />
    Returns true only if the local timer with the specified ID has expired. This action does not work as a state or response trigger in dialogs.<br />
    <br />
    <strong>0x4023 True()</strong><br />
    Always returns true.<br />
    <br />
    <strong>0x0024 Trigger(I:TriggerNum*)</strong><br />
    Used as a form of script communication, in conjunction with the SendTrigger() action. Seems to have the same range as GiveOrder, and affects only one creature at once. The LastTrigger object does not get set after receiving a trigger.<br />
    <br />
    <strong>0x0025 Die()</strong><br />
    Returns true if the active CRE has died in the last script round.<br />
    NB. When a block returns true to this trigger, this will be the final block executed in the script, unless it is Continue'd<br />
    <br />
    <strong>0x0026 TargetUnreachable(O:Object*)</strong><br />
    Returns true only if an action from the Attack, Spell or UseItem families that targeted the object specified cannot work with that target any more. That can happen from it not being in the area, deactivation, imprisonment, invisibility and sanctuary (provided true seeing options are not in play).<br />
    <br />
    <strong>0x4027 Delay(I:Delay*)</strong><br />
    Delays the next check of the block of triggers where this trigger is, by the number of seconds specified. This value is not stored when the game is saved.<br />
    <br />
    <strong>0x4028 NumCreature(O:Object*,I:Number*)</strong><br />
    Returns true only if the number of creatures of the type specified in sight of the active CRE are equal to the 2nd parameter.<br />
    <br />
    <strong>0x4029 NumCreatureLT(O:Object*,I:Number*)</strong><br />
    As above except for less than.<br />
    <br />
    <strong>0x402A NumCreatureGT(O:Object*,I:Number*)</strong><br />
    As above except for greater than.<br />
    <br />
    <strong>0x402B ActionListEmpty()</strong><br />
    Returns true only if the active CRE has no actions waiting to be performed, i.e. is idle.<br />
    <br />
    <strong>0x402C HPPercent(O:Object*,I:Hit Points*)</strong><br />
    See HP(O:Object*,I:Hit Points*) except this is for a percentage.<br />
    <br />
    <strong>0x402D HPPercentLT(O:Object*,I:Hit Points*)</strong><br />
    See HPLT(O:Object*,I:Hit Points*) except this is for a percentage.<br />
    <br />
    <strong>0x402E HPPercentGT(O:Object*,I:Hit Points*)</strong><br />
    See HPGT(O:Object*,I:Hit Points*) except this is for a percentage.<br />
    <br />
    <strong>0x002F Heard(O:Object*,I:ID*SHOUTIDS)</strong><br />
    Returns true only if the active CRE was within 30 feet of the specified object and the specified object shouted the specified number (which does not HAVE to be in SHOUTIDS.ids) in the last script round.<br />
    <br />
    <strong>0x4030 False()</strong><br />
    Never returns true, i.e. is always false. A block of triggers containing this will never return true regardless of the other triggers in the block. The
    corresponding actions will never take place.<br />
    <br />
    <strong>0x4031 HaveSpell(I:Spell*Spell)</strong><br />
    Returns true only if the active CRE has the specified spell memorised.<br />
    <br />
    <strong>0x4032 HaveAnySpells()</strong><br />
    Returns true if the active CRE has at least one spell memorised.<br />
    <br />
    <strong>0x0033 BecameVisible()</strong><br />
    NT Returns true only if the active CRE turned visible in the last script round.<br />
    <br />
    <strong>0x4034 GlobalGT(S:Name*,S:Area*,I:Value*)</strong><br />
    See Global(S:Name*,S:Area*,I:Value*) except the variable must be greater than the value specified to be true.<br />
    <br />
    <strong>0x4035 GlobalLT(S:Name*,S:Area*,I:Value*)</strong><br />
    As above except for less than.<br />
    <br />
    <strong>0x0036 OnCreation()</strong><br />
    Returns true if the script is processed for the first time this session, e.g. when a creature is created (for CRE scripts) or when the player enters an area (for ARE scripts).<br />
    <br />
    <strong>0x4037 StateCheck(O:Object*,I:State*State)</strong><br />
    Returns true only if the specified object is in the state specified.<br />
    <br />
    <strong>0x4038 NotStateCheck(O:Object*,I:State*State)</strong><br />
    Exact opposite of above.<br />
    <br />
    <strong>0x4039 NumTimesTalkedTo(I:Num*)</strong><br />
    Returns true only if the player's party has spoken to the active CRE the exact number of times specified.<br />
    NB. NumTimesTalkedTo seems to increment when a PCinitiates conversion with an NPC, or an NPC initiates conversation with a PC. NumTimesTalkedTo does not seem to increment for force-talks, interactions, interjections and self-talking.<br />
    <br />
    <strong>0x403A NumTimesTalkedToGT(I:Num*)</strong><br />
    Returns true only if the player's party has spoken to the active CRE more than the number of times specified.<br />
    <br />
    <strong>0x403B NumTimesTalkedToLT(I:Num*)</strong><br />
    Returns true only if the player's party has spoken to the active CRE less than the number of times specified.<br />
    <br />
    <strong>0x403C Reaction(O:Object*,I:Value*Reaction)</strong><br />
    Returns true only if the reaction of the object specified (on the friendly-hostile scale) to the player was as specified.<br />
    NB. Reaction = 10 + rmodchr + rmodrep (see rmodchr.2da and rmodrep.2da).<br />
    <br />
    <strong>0x403D ReactionGT(O:Object*,I:Value*Reaction)</strong><br />
    Returns true if the reaction of the object specified (on the friendly-hostile scale) to the player was greater than specified.<br />
    NB. Reaction = 10 + rmodchr + rmodrep (see rmodchr.2da and rmodrep.2da).<br />
    <br />
    <strong>0x403E ReactionLT(O:Object*,I:Value*Reaction)</strong><br />
    Returns true if the reaction of the object specified (on the friendly-hostile scale) to the player was lower than specified.<br />
    NB. Reaction = 10 + rmodchr + rmodrep (see rmodchr.2da and rmodrep.2da).<br />
    <br />
    <strong>0x403F GlobalTimerExact(S:Name*,S:Area*)</strong><br />
    NT<br />
    <br />
    <strong>0x4040 GlobalTimerExpired(S:Name*,S:Area*)</strong><br />
    Returns true only if the timer with the name specified and of the type in the 2nd parameter has run and expired.<br />
    <br />
    <strong>0x4041 GlobalTimerNotExpired(S:Name*,S:Area*)</strong><br />
    Returns true only if the timer with the name specified and of the type in the 2nd parameter is still running. Note that if we use !GlobalTimerNotExpired(S:Name*,S:Area*) this will return true if the timer has never been set OR if it has already expired- very useful...most useful of all the GlobalTimer triggers :) .<br />
    <br />
    <strong>0x4042 PartyHasItem(S:Item*)</strong><br />
    Returns true if any of the party members have the specified item in their inventory. This trigger also checks with container items (e.g. Bags of Holding).<br />
    <br />
    <strong>0x4043 InParty(O:Object*)</strong><br />
    Returns true only if the specifed object is in the player's party.<br />
    <br />
    <strong>0x4044 CheckStat(O:Object*,I:Value*,I:StatNum*Stats)</strong><br />
    Returns true only if the specified object has the statistic in the 3rd parameter at the value of the 2nd parameter.<br />
    <br />
    <strong>0x4045 CheckStatGT(O:Object*,I:Value*,I:StatNum*Stats)</strong><br />
    Returns true only if the specified object has the statistic in the 3rd parameter greater than the value of the 2nd parameter.<br />
    <br />
    <strong>0x4046 CheckStatLT(O:Object*,I:Value*,I:StatNum*Stats)</strong><br />
    Returns true only if the specified object has the statistic in the 3rd parameter less than the value of the 2nd parameter.<br />
    <br />
    <strong>0x4047 RandomNum(I:Range*,I:Value*)</strong><br />
    Generates a random number between 1 and Range. Returns true only if the random number equals the 2nd parameter.<br />
    <br />
    <strong>0x4048 RandomNumGT(I:Range*,I:Value*)</strong><br />
    NT As above except returns true only if the random number is greater than the 2nd parameter.<br />
    <br />
    <strong>0x4049 RandomNumLT(I:Range*,I:Value*)</strong><br />
    NT As above except returns true only if the random number is less than the 2nd parameter.<br />
    <br />
    <strong>0x004A Died(O:Object*)</strong><br />
    Returns true only if the specifed object died in the last script round.<br />
    <br />
    <strong>0x004B Killed(O:Object*)</strong><br />
    NT Returns true if the active CRE killed the specified object in the last script round.<br />
    <br />
    <strong>0x004C Entered(O:Object*)</strong><br />
    Only for trigger regions in areas. Returns true only if the specified object entered the trigger region in the last script round.<br />
    <br />
    <strong>0x404D Gender(O:Object*,I:Sex*Gender)</strong><br />
    Returns true only if the gender of the specified object is that given in the 2nd parameter.<br />
    <br />
    <strong>0x404E PartyGold(I:Amount*)</strong><br />
    Returns true only if the player's party has the amount of gold specified in the 2nd parameter.<br />
    <br />
    <strong>0x404F PartyGoldGT(I:Amount*)</strong><br />
    Returns true only if the player's party has more gold than specified in the 2nd parameter.<br />
    <br />
    <strong>0x4050 PartyGoldLT(I:Amount*)</strong><br />
    Returns true only if the player's party has less gold than specified in the 2nd parameter.<br />
    <br />
    <strong>0x4051 Dead(S:Name*)</strong><br />
    Returns only true if the creature with the specified script name has its death variable set to 1. Not every form of death sets this, but most do. So it's
    an almost complete test for death. The creature must have existed for this to be true. <span class="unknown">Note that SPRITE_IS_DEAD variables are not set if the creaure is killed by a neutral creature.</span><br />
    <br />
    <strong>0x0052 Opened(O:Object*)</strong><br />
    Only for door scripts. Returns true only if the specified object opened the active door in the last script round.<br />
    <br />
    <strong>0x0053 Closed(O:Object*)</strong><br />
    Only for door scripts. Returns true only if the specified object closed the active door in the last script round.<br />
    <br />
    <strong>0x0054 Detected(O:Object*)</strong><br />
    Only for trap scripts. Returns true only if the specified object detected this trap in the last script round.<br />
    <br />
    <strong>0x0055 Reset(O:Object*)</strong><br />
    NT Only for trap scripts? Returns true only if this trap or trigger was reset in the last script round by the object specified.<br />
    <br />
    <strong>0x0056 Disarmed(O:Object*)</strong><br />
    Only for trap/trigger region scripts. Returns true only if the specified object disarmed this trap in the last script round.<br />
    <br />
    <strong>0x0057 Unlocked(O:Object*)</strong><br />
    Only for door scripts - returns true only if this door was unlocked by the specified object in the last script round.<br />
    Appears to be broken.<br />
    <br />
    <strong>0x4058 OutOfAmmo()</strong><br />
    NT Returns true only if the active CRE has no ammunition for the current ranged weapon.<br />
    <br />
    <strong>0x4059 NumTimesInteracted(I:NPC*NPC,I:Num*)</strong><br />
    NT Returns true only if the specified NPC has interacted with the party a number of times equal to the 2nd parameter.<br />
    <br />
    <strong>0x405A NumTimesInteractedGT(I:NPC*NPC,I:Num*)</strong><br />
    NT Returns true only if the specified NPC has interacted with the party a number of times greater than the 2nd parameter.<br />
    <br />
    <strong>0x405B NumTimesInteractedLT(I:NPC*NPC,I:Num*)</strong><br />
    NT Returns true only if the specified NPC has interacted with the party a number of times less than the 2nd parameter.<br />
    <br />
    <strong>0x005C BreakingPoint()</strong><br />
    NT Returns true only if the active CRE is at its morale breaking point.<br />
    <br />
    <strong>0x005D PickPocketFailed(O:Object*)</strong><br />
    Seems to be broken. Not used in any existing scripts.<br />
    <br />
    <strong>0x005E StealFailed(O:Object*)</strong><br />
    For shopkeepers. Returns true if the specified object failed to steal from the shop in the last script round.<br />
    <br />
    <strong>0x005F DisarmFailed(O:Object*)</strong><br />
    NT Not used in any existing scripts.<br />
    <br />
    <strong>0x0060 PickLockFailed(O:Object*)</strong><br />
    NT Not used in any existing scripts.<br />
    <br />
    <strong>0x4061 HasItem(S:ResRef*,O:Object*)</strong><br />
    Returns true only if the specified object has the specified item in its inventory. This trigger also checks with container items (e.g. Bags of Holding).<br />
    <br />
    <strong>0x4062 InteractingWith(O:Object*)</strong><br />
    NT Returns true only if the active CRE is interacting (dialogue?) with the specified object.<br />
    <br />
    <strong>0x4068 TimeGT(I:Time*Time)</strong><br />
    Returns true only if the current time is greater than that specified. Hours are offset by 30 minutes, e.g. TimeGT(1) is true between 01:30 and 02:29.<br />
    <br />
    <strong>0x4069 TimeLT(I:Time*Time)</strong><br />
    Returns true only if the current time is less than that specified. Hours are offset by 30 minutes, e.g. TimeLT(1) is true between 23:30 and 00:29.<br />
    <br />
    <strong>0x4075 NearLocation(O:Object*,P:Point*,I:Range*)</strong><br />
    NT Returns true if the specified object is within the range of the specified point. Works similar to Range(), but with a point instead of an object.<br />
    <br />
    <strong>0x4076 NearSavedLocation(I:Range*)</strong><br />
    NT Returns true if the active creature is within the range of its home location.<br />
    <br />
    <strong>0x4077 InView(O:Object*,I:Eyesight*)</strong><br />
    NT<br />
    <br />
    <strong>0x4078 OwnsFloaterMessage(O:Object*)</strong><br />
    NT<br />
    <br />
    <strong>0x4079 TriggerClick()</strong><br />
    NT<br />
    <br />
    <strong>0x407a AssaltedBy(O:Object*,I:Style*AStyles)</strong><br />
    NT<br />
    <br />
    <strong>0x407b RandomStatCheck(O:Object*,I:StatNum*Stats,I:CheckType*Delta,I:CheckValue*Bones)</strong><br />
    NT<br />
    <br />
    <strong>0x407c TimerActive(I:ID*)</strong><br />
    NT Returns true only if the local timer with the specified ID has not yet expired.<br />
    <br />
    <strong>0x407d PCCanSeePoint(P:Point*)</strong><br />
    NT<br />
    <br />
    <strong>0x407e CreatureInArea(S:AreaName*)</strong><br />
    NT Returns true only if the active CRE is in the area specified.<br />
    <br />
    <strong>0x407f BitCheck(S:Name*,S:Area*,I:Bit*Bits)</strong><br />
    NT Returns true if at least one bit from the given variable is in common with the bits defined in the third parameter.<br />
    <br />
    <strong>0x4080 GlobalBAND(S:Name*,S:Area*,I:Value*)</strong><br />
    NT<br />
    <br />
    <strong>0x4081 BitCheckExact(S:Name*,S:Area*,I:Bit*Bits)</strong><br />
    NT<br />
    <br />
    <strong>0x4082 GlobalEqualsGlobal(S:Name1*,S:Area1*,S:Name2*,S:Area2*)</strong><br />
    NT<br />
    <br />
    <strong>0x4083 GlobalLTGlobal(S:Name1*,S:Area1*,S:Name2*,S:Area2*)</strong><br />
    NT<br />
    <br />
    <strong>0x4084 GlobalGTGlobal(S:Name1*,S:Area1*,S:Name2*,S:Area2*)</strong><br />
    NT<br />
    <br />
    <strong>0x4085 GlobalANDGlobal(S:Name1*,S:Area1*,S:Name2*,S:Area2*)</strong><br />
    NT<br />
    <br />
    <strong>0x4086 GlobalORGlobal(S:Name1*,S:Area1*,S:Name2*,S:Area2*)</strong><br />
    NT<br />
    <br />
    <strong>0x4087 GlobalBANDGlobal(S:Name1*,S:Area1*,S:Name2*,S:Area2*)</strong><br />
    NT<br />
    <br />
    <strong>0x4088 GlobalBANDGlobalExact(S:Name1*,S:Area1*,S:Name2*,S:Area2*)</strong><br />
    NT<br />
    <br />
    <strong>0x4089 PartyCountEQ(I:Count*)</strong><br />
    NT<br />
    <br />
    <strong>0x408a PartyCountLT(I:Count*)</strong><br />
    NT<br />
    <br />
    <strong>0x408b PartyCountGT(I:Count*)</strong><br />
    NT<br />
    <br />
    <strong>0x408c ObjItemCountEQ(S:Item*,O:Object*,I:Count)</strong><br />
    NT<br />
    <br />
    <strong>0x408d ObjItemCountLT(S:Item*,O:Object*,I:Count)</strong><br />
    NT<br />
    <br />
    <strong>0x408e ObjItemCountGT(S:Item*,O:Object*,I:Count)</strong><br />
    NT<br />
    <br />
    <strong>0x408e PartyItemCountEQ(S:Item*,I:Count)</strong><br />
    NT<br />
    <br />
    <strong>0x4090 PartyItemCountLT(S:Item*,I:Count)</strong><br />
    NT<br />
    <br />
    <strong>0x4091 PartyItemCountGT(S:Item*,I:Count)</strong><br />
    NT<br />
    <br />
    <strong>0x4092 WatchMe(I:Mode*)</strong><br />
    NT<br />
    <br />
    <strong>0x4093 NearbyDialog(S:DialogFile*)</strong><br />
    NT Returns true only if a creature with the specified dialog file is within visual range of the active CRE.<br />
    <br />
    <strong>0x0094 Vacant()</strong><br />
    NT Returns true only if the current area is a non-master area and is about to be unloaded because no player characters were present in the last script round.<br />
    <br />
    <strong>0x4095 Xor(S:Name*,S:Area*,I:Value*)</strong><br />
    NT<br />
    <br />
    <strong>0x4096 IsAClown(O:Object*)</strong><br />
    NT<br />
    <br />
    <strong>0x4097 Proficiency(O:Object*,I:Slot*WProf,I:Value*)</strong><br />
    Returns true only if the proficiency level of the specified object in the weapon denoted by the second parameter is equal to the third parameter.<br />
    <br />
    <strong>0x4098 ProficiencyLT(O:Object*,I:Slot*WProf,I:Value*)</strong><br />
    Same as Proficiency but checks if the proficiency level is lesser than Value.<br />
    <br />
    <strong>0x4099 ProficiencyGT(O:Object*,I:Slot*WProf,I:Value*)</strong><br />
    Same as Proficiency but checks if the proficiency level is greater or equal than Value.<br />
    <br />
    <strong>0x409a Faction(O:Object*,I:Value*Faction)</strong><br />
    NT Returns true only if the Faction of the specified object is the same as that specified by the 2nd parameter. <br />
    <br />
    <strong>0x409b Team(O:Object*,I:Value*Team)</strong><br />
    NT Returns true only if the Team of the specified object is the same as that specified by the 2nd parameter.<br />
    <br />
    <strong>0x409c StuffGlobalRandom(S:Name*,S:Area*,I:Range*)</strong><br />
    NT This trigger acts as a hybrid action/trigger. It generates a random integer between [0, 'Range'] inclusive, and sets the variable 'Name' under the given 'Scope'. This trigger always returns true.<br />
    <br />
    <strong>0x009d HarmlessOpened(O:Object*)</strong><br />
    NT Only for container and door scripts. Returns true only if the specified object opened the container or door in the last script round, given there was no trap active.<br />
    <br />
    <strong>0x009e HarmlessClosed(O:Object*)</strong><br />
    NT Only for door scripts. Returns true only if the specified object closed the door in the last script round, given there was no trap active.<br />
    <br />
    <strong>0x009f HarmlessEntered(O:Object*)</strong><br />
    NT Only for trigger regions. Returns true only if the specified object entered the region in the last script round, given there was no trap active.<br />
    <br />
    <strong>0x40a0 CalledByName(O:Object*,S:Scriptname*)</strong><br />
    NT<br />
    <br />
    <strong>0x40a1 Internal(O:Object*,I:Index*Internal,I:Value*)</strong><br />
    NT<br />
    <br />
    <strong>0x40a2 InternalLT(O:Object*,I:Index*Internal,I:Value*)</strong><br />
    NT<br />
    <br />
    <strong>0x40a3 InternalGT(O:Object*,I:Index*Internal,I:Value*)</strong><br />
    NT<br />
    <br />
    <strong>0x00a4 NullDialog(O:Object*)</strong><br />
    NT Returns true for one script round if the specified object attempts to talk to the active CRE which has an empty ("") dialog file set.<br />
    <br />
    <strong>0x00a5 WasInDialog()</strong><br />
    NT Returns true only if the active CRE was in dialog mode in the last script round.<br />
    <br />
    <strong>0x40a6 IsLocked(O:Object*)</strong><br />
    NT Returns true only if the specified door is locked.<br />
    <br />
    <strong>0x40a7 AnimState(O:Object*,I:Sequence*Animstat)</strong><br />
    NT<br />
    <br />
    <strong>0x40a8 ExtraProficiency(O:Object*,I:Value*)</strong><br />
    NT Returns true only if the specified object has the same number of unspent proficiency points as in the 2nd parameter.<br />
    <br />
    <strong>0x40a9 ExtraProficiencyLT(O:Object*,I:Value*)</strong><br />
    NT Returns true only if the specified object has less unspent proficiency points as in the 2nd parameter.<br />
    <br />
    <strong>0x40aa ExtraProficiencyGT(O:Object*,I:Value*)</strong><br />
    NT Returns true only if the specified object has more unspent proficiency points as in the 2nd parameter.<br />
    <br />
    <strong>0x00ab NamelessBitTheDust()</strong><br />
    NT Returns only true if TNO died in the last script round.<br />
    <br />
    <strong>0x40ac ClassLevel(O:Object*,I:Value*Class,I:Value*)</strong><br />
    NT<br />
    <br />
    <strong>0x40ad ClassLevelGT(O:Object*,I:Value*Class,I:Value*)</strong><br />
    NT<br />
    <br />
    <strong>0x40ae ClassLevelLT(O:Object*,I:Value*Class,I:Value*)</strong><br />
    NT<br />
    <br />
    <strong>0x00af FailedToOpen(O:Object*)</strong><br />
    NT Returns true if the current CRE failed to open a door or container in the last script round.<br />
    <br />
    <strong>0x40b1 LastPersonTalkedTo(O:Object*)</strong><br />
    NT Returns true only if the active CRE's LastTalkedToBy object equals the 'Object' parameter.<br />
    <br />
    <strong>0x40b2 IsInGuardianMantle(O:Object*)</strong><br />
    NT<br />
  </div>
</div>


<a href="#" class="go-up">
  &nbsp;
</a>


  </div>
</div>

<script>
window.addEventListener("scroll", function(event) {
  var top = window.pageYOffset || document.documentElement.scrollTop;
  var arrow = document.getElementsByClassName("go-up")[0];
  if (top > 100) {
    arrow.style.visibility = "visible";
  } else {
    arrow.style.visibility = "hidden";
  }
});
</script>

<footer class="site-footer">
  <hr />
  <div id="footer">

    <div class="">
      <a class="gh-icon-container" href="https://github.com/gibberlings3/iesdp/">
  <span class="icon icon--github"><svg viewBox="0 0 16 16"><path d="M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761 c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32 c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472 c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037 C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65 c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261 c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082 c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129 c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z"/></svg>
</span>
</a>

      <a href="https://github.com/gibberlings3/iesdp//blob/master/scripting/triggers/psttriggers.htm">Edit this page</a>
    </div>

    <div class="">
      <form method="get" action="https://www.google.com/search">
        <div style="margin: 0px; padding: 0px; text-align: center">
          <input type="hidden" name="ie" value="UTF-8" />
          <input type="hidden" name="oe" value="UTF-8" />
          <input class="form_text" type="text" name="q" size="30" maxlength="255" value="" />
          <input class="form_button" type="submit" name="btnG" value="Search" />
          <input type="hidden" name="domains" value="https://gibberlings3.github.io/iesdp" />
          <input type="hidden" name="sitesearch" value="https://gibberlings3.github.io/iesdp" />
        </div>
      </form>
    </div>

  </div>
  <hr />
</footer>


</body>
</html>
